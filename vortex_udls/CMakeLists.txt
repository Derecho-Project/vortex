
# Find Hnswlib package, used by cluster_search
find_package(hnswlib REQUIRED)

set(UDL_COMMON_LIBS derecho derecho::cascade pthread faiss CUDA::cudart)

# Centroids_search UDL tags
set(LOG_BATCH_FAISS_SEARCH_START 30030)
set(LOG_BATCH_FAISS_SEARCH_END 30031)
set(LOG_BATCH_FAISS_SEARCH_SIZE 30032)

set(LOG_CENTROIDS_EMBEDDINGS_UDL_START 20000)
set(LOG_CENTROIDS_EMBEDDINGS_LOADING_START 20010)
set(LOG_CENTROIDS_EMBEDDINGS_LOADING_END 20011)
set(LOG_CENTROIDS_SEARCH_PREPARE_EMBEDDINGS_START 20020)
set(LOG_CENTROIDS_SEARCH_PREPARE_EMBEDDINGS_END 20021)
set(LOG_CENTROIDS_EMBEDDINGS_UDL_SEARCH_START 20030)
set(LOG_CENTROIDS_EMBEDDINGS_UDL_SEARCH_END 20031)
set(LOG_CENTROIDS_EMBEDDINGS_UDL_COMBINE_END 20041)
set(LOG_CENTROIDS_EMBEDDINGS_UDL_EMIT_START 20050)
set(LOG_CENTROIDS_EMBEDDINGS_UDL_EMIT_END 20051)
set(LOG_CENTROIDS_EMBEDDINGS_UDL_END 20100)


# Cluster Search tags
set(LOG_CLUSTER_SEARCH_UDL_START 30000)
set(LOG_CLUSTER_SEARCH_UDL_LOADEMB_START 30010)
set(LOG_CLUSTER_SEARCH_UDL_LOADEMB_END 30011)
set(LOG_CLUSTER_SEARCH_DESERIALIZE_START 30020)
set(LOG_CLUSTER_SEARCH_DESERIALIZE_END 30021)
set(LOG_CLUSTER_SEARCH_ADDED_TOBATCH 30022)
set(LOG_CLUSTER_SEARCH_CONSTRUCT_KEYS_END 30041)
set(LOG_CLUSTER_SEARCH_UDL_EMIT_START 30050)


add_library(centroids_search_udl SHARED
                            ${CMAKE_CURRENT_SOURCE_DIR}/centroids_search_udl.cpp 
                            ${CMAKE_CURRENT_SOURCE_DIR}/serialize_utils.cpp 
                            ${CMAKE_CURRENT_SOURCE_DIR}/grouped_embeddings_for_search.cpp
                            ${CMAKE_CURRENT_SOURCE_DIR}/api_utils.cpp)
target_link_libraries(centroids_search_udl PRIVATE ${UDL_COMMON_LIBS})
target_compile_definitions(centroids_search_udl PRIVATE
    LOG_CENTROIDS_EMBEDDINGS_UDL_START=${LOG_CENTROIDS_EMBEDDINGS_UDL_START}
    LOG_CENTROIDS_EMBEDDINGS_LOADING_START=${LOG_CENTROIDS_EMBEDDINGS_LOADING_START}
    LOG_CENTROIDS_EMBEDDINGS_LOADING_END=${LOG_CENTROIDS_EMBEDDINGS_LOADING_END}
    LOG_CENTROIDS_SEARCH_PREPARE_EMBEDDINGS_START=${LOG_CENTROIDS_SEARCH_PREPARE_EMBEDDINGS_START}
    LOG_CENTROIDS_SEARCH_PREPARE_EMBEDDINGS_END=${LOG_CENTROIDS_SEARCH_PREPARE_EMBEDDINGS_END}
    LOG_CENTROIDS_EMBEDDINGS_UDL_SEARCH_START=${LOG_CENTROIDS_EMBEDDINGS_UDL_SEARCH_START}
    LOG_CENTROIDS_EMBEDDINGS_UDL_SEARCH_END=${LOG_CENTROIDS_EMBEDDINGS_UDL_SEARCH_END}
    LOG_CENTROIDS_EMBEDDINGS_UDL_COMBINE_END=${LOG_CENTROIDS_EMBEDDINGS_UDL_COMBINE_END}
    LOG_CENTROIDS_EMBEDDINGS_UDL_EMIT_START=${LOG_CENTROIDS_EMBEDDINGS_UDL_EMIT_START}
    LOG_CENTROIDS_EMBEDDINGS_UDL_EMIT_END=${LOG_CENTROIDS_EMBEDDINGS_UDL_EMIT_END}
    LOG_CENTROIDS_EMBEDDINGS_UDL_END=${LOG_CENTROIDS_EMBEDDINGS_UDL_END}
    LOG_BATCH_FAISS_SEARCH_SIZE=${LOG_BATCH_FAISS_SEARCH_SIZE}
    LOG_BATCH_FAISS_SEARCH_START=${LOG_BATCH_FAISS_SEARCH_START}
    LOG_BATCH_FAISS_SEARCH_END=${LOG_BATCH_FAISS_SEARCH_END}
)


add_library(clusters_search_udl SHARED 
                                ${CMAKE_CURRENT_SOURCE_DIR}/clusters_search_udl.cpp 
                                ${CMAKE_CURRENT_SOURCE_DIR}/grouped_embeddings_for_search.cpp
                                ${CMAKE_CURRENT_SOURCE_DIR}/serialize_utils.cpp)
target_link_libraries(clusters_search_udl PRIVATE ${UDL_COMMON_LIBS})

target_compile_definitions(clusters_search_udl PRIVATE
    LOG_CLUSTER_SEARCH_UDL_START=${LOG_CLUSTER_SEARCH_UDL_START}
    LOG_CLUSTER_SEARCH_UDL_LOADEMB_START=${LOG_CLUSTER_SEARCH_UDL_LOADEMB_START}
    LOG_CLUSTER_SEARCH_UDL_LOADEMB_END=${LOG_CLUSTER_SEARCH_UDL_LOADEMB_END}
    LOG_CLUSTER_SEARCH_DESERIALIZE_START=${LOG_CLUSTER_SEARCH_DESERIALIZE_START}
    LOG_CLUSTER_SEARCH_DESERIALIZE_END=${LOG_CLUSTER_SEARCH_DESERIALIZE_END}
    LOG_CLUSTER_SEARCH_ADDED_TOBATCH=${LOG_CLUSTER_SEARCH_ADDED_TOBATCH}
    LOG_BATCH_FAISS_SEARCH_START=${LOG_BATCH_FAISS_SEARCH_START}
    LOG_BATCH_FAISS_SEARCH_END=${LOG_BATCH_FAISS_SEARCH_END}
    LOG_BATCH_FAISS_SEARCH_SIZE=${LOG_BATCH_FAISS_SEARCH_SIZE}
    LOG_CLUSTER_SEARCH_CONSTRUCT_KEYS_END=${LOG_CLUSTER_SEARCH_CONSTRUCT_KEYS_END}
    LOG_CLUSTER_SEARCH_UDL_EMIT_START=${LOG_CLUSTER_SEARCH_UDL_EMIT_START}
)

# AGG GENERATE UDL tags
set(LOG_TAG_AGG_UDL_START 40000)
set(LOG_TAG_AGG_UDL_FINISHED_DESERIALIZE 40001)
set(LOG_TAG_AGG_UDL_END_NOT_FULLY_GATHERED 40010)
set(LOG_TAG_AGG_UDL_QUERY_FINISHED_GATHERED 40011)
set(LOG_TAG_AGG_UDL_RETRIEVE_DOC_START 40020)
set(LOG_TAG_AGG_UDL_LOAD_EMB_DOC_MAP_START 40120)
set(LOG_TAG_AGG_UDL_LOAD_EMB_DOC_MAP_END 40121)
set(LOG_TAG_AGG_UDL_LOAD_DOC_START 40220)
set(LOG_TAG_AGG_UDL_LOAD_DOC_END 40221)
set(LOG_TAG_AGG_UDL_RETRIEVE_DOC_END 40021)
set(LOG_TAG_AGG_UDL_PUT_RESULT_START 40030)
set(LOG_TAG_AGG_UDL_PUT_RESULT_END 40031)
set(LOG_TAG_AGG_UDL_END 40100)


add_library(aggregate_generate_udl SHARED 
            ${CMAKE_CURRENT_SOURCE_DIR}/aggregate_generate_udl.cpp 
            ${CMAKE_CURRENT_SOURCE_DIR}/serialize_utils.cpp 
            ${CMAKE_CURRENT_SOURCE_DIR}/api_utils.cpp)
target_link_libraries(aggregate_generate_udl PRIVATE derecho::cascade)

target_compile_definitions(aggregate_generate_udl PRIVATE
    LOG_TAG_AGG_UDL_END=${LOG_TAG_AGG_UDL_END}
    LOG_TAG_AGG_UDL_START=${LOG_TAG_AGG_UDL_START}
    LOG_TAG_AGG_UDL_FINISHED_DESERIALIZE=${LOG_TAG_AGG_UDL_FINISHED_DESERIALIZE}
    LOG_TAG_AGG_UDL_END_NOT_FULLY_GATHERED=${LOG_TAG_AGG_UDL_END_NOT_FULLY_GATHERED}
    LOG_TAG_AGG_UDL_QUERY_FINISHED_GATHERED=${LOG_TAG_AGG_UDL_QUERY_FINISHED_GATHERED}
    LOG_TAG_AGG_UDL_RETRIEVE_DOC_START=${LOG_TAG_AGG_UDL_RETRIEVE_DOC_START}
    LOG_TAG_AGG_UDL_LOAD_EMB_DOC_MAP_START=${LOG_TAG_AGG_UDL_LOAD_EMB_DOC_MAP_START}
    LOG_TAG_AGG_UDL_LOAD_EMB_DOC_MAP_END=${LOG_TAG_AGG_UDL_LOAD_EMB_DOC_MAP_END}
    LOG_TAG_AGG_UDL_LOAD_DOC_START=${LOG_TAG_AGG_UDL_LOAD_DOC_START}
    LOG_TAG_AGG_UDL_LOAD_DOC_END=${LOG_TAG_AGG_UDL_LOAD_DOC_END}
    LOG_TAG_AGG_UDL_RETRIEVE_DOC_END=${LOG_TAG_AGG_UDL_RETRIEVE_DOC_END}
    LOG_TAG_AGG_UDL_PUT_RESULT_START=${LOG_TAG_AGG_UDL_PUT_RESULT_START}
    LOG_TAG_AGG_UDL_PUT_RESULT_END=${LOG_TAG_AGG_UDL_PUT_RESULT_END}
    LOG_FAISS_SEARCH_BATCH_SIZE=${LOG_FAISS_SEARCH_BATCH_SIZE}
    LOG_TAG_AGG_UDL_END=${LOG_TAG_AGG_UDL_END}
)


# Build Python UDLs
find_package(Python3 3.10.0 QUIET COMPONENTS Interpreter Development Development.Module Development.Embed NumPy)
# find_package(QUIET COMPONENTS Interpreter Development Development.Module Development.Embed NumPy)


if (Python3_FOUND)

    # Configurations
    configure_file(${CMAKE_CURRENT_SOURCE_DIR}/python/config.h.in ${CMAKE_CURRENT_BINARY_DIR}/config.h)

    # main target
    add_library(python_udl_manager SHARED ${CMAKE_CURRENT_SOURCE_DIR}/python/python_udl_manager.cpp)
    target_include_directories(python_udl_manager PRIVATE
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
        $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>
    )

    target_link_libraries(python_udl_manager cascade Python3::Python Python3::NumPy)
    
    # add_custom_command(TARGET python_udl_manager POST_BUILD
    #     COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_SOURCE_DIR}/python_udls
    #         ${CMAKE_CURRENT_BINARY_DIR}/cfg/python_udls
    #     COMMAND ln -sf ${CMAKE_CURRENT_BINARY_DIR}/cfg/python_udls
    #         ${CMAKE_CURRENT_BINARY_DIR}/cfg/n0/python_udls
    #     COMMAND ln -sf ${CMAKE_CURRENT_BINARY_DIR}/cfg/python_udls
    #         ${CMAKE_CURRENT_BINARY_DIR}/cfg/n1/python_udls
    #     COMMAND ln -sf ${CMAKE_CURRENT_BINARY_DIR}/cfg/python_udls
    #         ${CMAKE_CURRENT_BINARY_DIR}/cfg/n2/python_udls
    #     COMMAND echo \'\#!/usr/bin/env bash\' > ${CMAKE_CURRENT_BINARY_DIR}/show_cascade_python_udl.sh
    #     COMMAND echo "PYTHONUDL=${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}/$<TARGET_FILE_NAME:python_udl_manager>" >> ${CMAKE_CURRENT_BINARY_DIR}/show_cascade_python_udl.sh
    #     COMMAND echo \'echo $$\{PYTHONUDL\}\' >> ${CMAKE_CURRENT_BINARY_DIR}/show_cascade_python_udl.sh
    #     COMMAND chmod 755 ${CMAKE_CURRENT_BINARY_DIR}/show_cascade_python_udl.sh
    #     DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/cfg/run.sh.tmp
    #             ${CMAKE_CURRENT_SOURCE_DIR}/cfg/layout.json.tmp
    #             ${CMAKE_CURRENT_SOURCE_DIR}/cfg/dfgs.json.tmp
    #             ${CMAKE_CURRENT_SOURCE_DIR}/cfg/udl_dlls.cfg.tmp
    #             ${CMAKE_CURRENT_SOURCE_DIR}/cfg/python_udls/sample_udls.py
    #     COMMENT "prepare python_udl configuration"
    # )

endif()